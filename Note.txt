Micro-Frontends Course - Beginner to Expert
(https://www.youtube.com/watch?v=lKKsjpH09dU)

https://github.com/jherr/micro-fes-beginner-to-expert
https://github.com/Annie-Huang/micro-fes-beginner-to-expert

===========================================================================================

Note: pnpx is a Window thing, while pnpm is a Mac thing;

PS C:\react\micro-fes-beginner-to-expert> pnpx create-mf-app
Packages: +73
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Progress: resolved 73, reused 18, downloaded 55, added 73, done
? Pick the name of your app: home
? Project Type: Application
? Port number: 3000
? Framework: react
? Language: javascript
? CSS: Tailwind
? Packer: Webpack
Your 'home' project is ready to go.

Next steps:

▶️ cd home
▶️ npm install
▶️ npm start

PS C:\react\micro-fes-beginner-to-expert> cd home
PS C:\react\micro-fes-beginner-to-expert\home> npm install
PS C:\react\micro-fes-beginner-to-expert\home> npm start

http://localhost:3000/

------------------

Note: pdp stand for product detail page.

PS C:\react\micro-fes-beginner-to-expert> pnpx create-mf-app
? Pick the name of your app: pdp
? Project Type: Application
? Port number: 3001
? Framework: react
? Language: javascript
? CSS: Tailwind
? Packer: Webpack
Your 'pdp' project is ready to go.

Next steps:

▶️ cd pdp
▶️ npm install
▶️ npm start

PS C:\react\micro-fes-beginner-to-expert> cd pdp
PS C:\react\micro-fes-beginner-to-expert\pdp> npm install
PS C:\react\micro-fes-beginner-to-expert\pdp> npm start
http://localhost:3001/

------------------

PS C:\react\micro-fes-beginner-to-expert> pnpx create-mf-app
Packages: +73
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Progress: resolved 73, reused 73, downloaded 0, added 73, done
? Pick the name of your app: server
? Project Type: API Server
? Port number: 8080
? Template: nestjs-auth
Your 'server' project is ready to go.

Next steps:

▶️ cd server
▶️ npm install
▶️ npm start

PS C:\react\micro-fes-beginner-to-expert> cd .\server\
PS C:\react\micro-fes-beginner-to-expert\server> npm install
PS C:\react\micro-fes-beginner-to-expert\server> npm run start
http://localhost:8080/fidget-1.jpg
http://localhost:8080/unauthorized

PS C:\react\micro-fes-beginner-to-expert\server> npm run start:dev
http://localhost:8080/products
http://localhost:8080/products/1

----------------------------------------

http://localhost:3000/
http://localhost:3000/remoteEntry.js       << will appear as long as you add things into the 'exposes' section in the webpack.config.js
http://localhost:3001/
http://localhost:8080/products
http://localhost:8080/products/1

you can use
home or
home_page, but not
home-page as the name in ModuleFederationPlugin


To fix tailwind 3 not working with federation module problem:
https://dev.to/blessonabraham/building-micro-frontend-with-react-module-federation-3j46
PS C:\react\micro-fes-beginner-to-expert\home> npm install mini-css-extract-plugin --save-dev
PS C:\react\micro-fes-beginner-to-expert\pdp> npm install mini-css-extract-plugin --save-dev


Shared library and make singleton download:
In C:\react\micro-fes-beginner-to-expert\pdp\webpack.config.js, we can see
      shared: {
        ...deps,
        react: {
          singleton: true,
          requiredVersion: deps.react,
        },
        'react-dom': {
          singleton: true,
          requiredVersion: deps['react-dom'],
        },
      },
Note04 - Before we click button to show the Header.jpg
Note05 - After we click button to show the Header.jpg
You can see when we click the button, it only download src_Header_jsx.js file.
You can see we ONLY download react-dom and react ONCE, no duplicate download


Error Boundary:
Absolutely need the error boundary file, e.g. C:\react\micro-fes-beginner-to-expert\pdp\src\SafeComponent.jsx
To protect App that got component which change contract.
e.g. <Header> in <Home> app change to take in a name prop, and the App.js from <Home> has change
     from <Header />
     to <Header name='home' />
     <Pdp> app will break without a nice error boundary file.


You don't have to just share components, you can share javascript (e.g. service api call) as well:
      exposes: {
        './Header': './src/Header.jsx',
        './Footer': './src/Footer.jsx',
        './products': './src/products.js',
      },










